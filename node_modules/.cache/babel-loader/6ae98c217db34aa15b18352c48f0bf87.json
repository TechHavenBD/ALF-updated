{"ast":null,"code":"var _jsxFileName = \"/Users/lanceway/Downloads/ALF-update-main/src/shared/Button/index.tsx\";\nimport React, { forwardRef } from 'react';\nimport { __DEV__ } from '../../utils/assertions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = /*#__PURE__*/React.memo(_c2 = /*#__PURE__*/forwardRef(_c = (_ref, ref) => {\n  let {\n    children,\n    variant = 'solid',\n    size = 'md',\n    fullWidth = false,\n    className,\n    as = 'button',\n    isExternal = false,\n    ...rest\n  } = _ref;\n  let tempClassNames = [];\n  const sharedClasses = ['focus:outline-none', 'focus:ring-red-400', 'font-semibold', 'rounded-full', 'inline-flex', 'flex-shrink-0', 'items-center', 'justify-center', 'hover:-translate-y-0.5', 'transition-all', 'ease-in-out', 'duration-150'];\n  if (fullWidth) sharedClasses.push('w-full'); // handle variants\n\n  let btnSolid = ['bg-[#f95820]', 'hover:text-black', 'hover:fill-red-600', 'text-white', 'fill-white', 'shadow-lg', 'shadow-red-600/40'];\n  let btnOutline = ['text-white', 'fill-gray-600', 'dark:text-white', 'hover:text-black', 'hover:fill-red-600', 'bg-[#f95820]', 'hover:bg-white', 'border', 'border-[#f95820]'];\n  let btnGhost = ['bg-[#FEF027]', 'text-gray-700', 'hover:bg-[#14A800]', 'hover:text-white'];\n\n  if (variant === 'solid') {\n    tempClassNames = [...sharedClasses, ...btnSolid];\n  } else if (variant === 'outline') {\n    tempClassNames = [...sharedClasses, ...btnOutline];\n  } else if (variant === 'ghost') {\n    tempClassNames = [...sharedClasses, ...btnGhost];\n  } // handle sizes\n\n\n  let sizeSm = ['h-8', 'px-3', 'text-sm'];\n  let sizeMd = ['h-10', 'px-6'];\n  let sizeLg = ['h-12', 'px-6', 'text-lg'];\n\n  if (size === 'sm') {\n    tempClassNames = [...tempClassNames, ...sizeSm];\n  } else if (size === 'md') {\n    tempClassNames = [...tempClassNames, ...sizeMd];\n  } else if (size === 'lg') {\n    tempClassNames = [...tempClassNames, ...sizeLg];\n  }\n\n  let classes = tempClassNames.join(' ');\n  let Element = as ? /*#__PURE__*/React.createElement(as, {\n    className: `${classes} ${className}`,\n    target: isExternal ? '_blank' : undefined,\n    rel: isExternal ? 'noopener noreferrer' : undefined,\n    ref,\n    ...rest\n  }, children) : /*#__PURE__*/_jsxDEV(\"button\", { ...rest,\n    className: `${classes} ${className}`,\n    ref: ref,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `relative ${fullWidth ? 'w-full' : undefined}`,\n    children: Element\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n}));\n_c3 = Button;\n\nif (__DEV__) {\n  Button.displayName = 'Button';\n}\n/* === IconButton Element === */\n\n\nexport const IconButton = /*#__PURE__*/React.memo(_c5 = /*#__PURE__*/forwardRef(_c4 = (_ref2, ref) => {\n  let {\n    children,\n    icon,\n    className,\n    'aria-label': ariaLabel,\n    size = 'md',\n    ...rest\n  } = _ref2;\n  let sharedClasses = ['rounded-full', '!px-0']; // handle sizes\n\n  let sizeSm = ['w-8'];\n  let sizeMd = ['w-10'];\n  let sizeLg = ['w-12'];\n\n  if (size === 'sm') {\n    sharedClasses = [...sharedClasses, ...sizeSm];\n  } else if (size === 'md') {\n    sharedClasses = [...sharedClasses, ...sizeMd];\n  } else if (size === 'lg') {\n    sharedClasses = [...sharedClasses, ...sizeLg];\n  }\n  /**\n   * Passing the icon as prop or children should work\n   */\n\n\n  const element = icon || children;\n\n  const _children = /*#__PURE__*/React.isValidElement(element) ? /*#__PURE__*/React.cloneElement(element, {\n    'aria-hidden': true,\n    focusable: false\n  }) : null;\n\n  let classes = sharedClasses.join(' ');\n  return /*#__PURE__*/_jsxDEV(Button, {\n    className: `${classes} ${className}`,\n    \"aria-label\": ariaLabel,\n    size: size,\n    ...rest,\n    ref: ref,\n    children: _children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n}));\n_c6 = IconButton;\n\nif (__DEV__) {\n  IconButton.displayName = 'IconButton';\n}\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Button$React.memo$forwardRef\");\n$RefreshReg$(_c2, \"Button$React.memo\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"IconButton$React.memo$forwardRef\");\n$RefreshReg$(_c5, \"IconButton$React.memo\");\n$RefreshReg$(_c6, \"IconButton\");","map":{"version":3,"names":["React","forwardRef","__DEV__","Button","memo","ref","children","variant","size","fullWidth","className","as","isExternal","rest","tempClassNames","sharedClasses","push","btnSolid","btnOutline","btnGhost","sizeSm","sizeMd","sizeLg","classes","join","Element","createElement","target","undefined","rel","displayName","IconButton","icon","ariaLabel","element","_children","isValidElement","cloneElement","focusable"],"sources":["/Users/lanceway/Downloads/ALF-update-main/src/shared/Button/index.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { __DEV__ } from '../../utils/assertions';\n\ntype BaseButtonProps = Omit<React.HTMLProps<HTMLButtonElement>, 'size'>;\n\n/* === Button Element === */\n\nexport interface ButtonProps extends BaseButtonProps {\n  children: React.ReactNode;\n  fullWidth?: boolean;\n  className?: string;\n  variant?: 'solid' | 'outline' | 'ghost';\n  size?: 'sm' | 'md' | 'lg';\n  as?: string;\n  isExternal?: boolean;\n  type?: 'button' | 'submit' | 'reset';\n  isLoading?: boolean;\n}\n\nexport const Button = React.memo(\n  forwardRef<HTMLButtonElement, ButtonProps>(\n    (\n      {\n        children,\n        variant = 'solid',\n        size = 'md',\n        fullWidth = false,\n        className,\n        as = 'button',\n        isExternal = false,\n        ...rest\n      },\n      ref\n    ) => {\n      let tempClassNames: string[] = [];\n\n      const sharedClasses = [\n        'focus:outline-none',\n        'focus:ring-red-400',\n        'font-semibold',\n        'rounded-full',\n        'inline-flex',\n        'flex-shrink-0',\n        'items-center',\n        'justify-center',\n        'hover:-translate-y-0.5',\n        'transition-all',\n        'ease-in-out',\n        'duration-150',\n      ];\n\n      if (fullWidth) sharedClasses.push('w-full');\n\n      // handle variants\n      let btnSolid = [\n        'bg-[#f95820]',\n        'hover:text-black',\n        'hover:fill-red-600',\n        'text-white',\n        'fill-white',\n        'shadow-lg',\n        'shadow-red-600/40',\n      ];\n      let btnOutline = [\n        'text-white',\n        'fill-gray-600',\n        'dark:text-white',\n        'hover:text-black',\n        'hover:fill-red-600',\n        'bg-[#f95820]',\n        'hover:bg-white',\n        'border',\n        'border-[#f95820]',\n      ];\n      let btnGhost = [\n        'bg-[#FEF027]',\n        'text-gray-700',\n        'hover:bg-[#14A800]',\n        'hover:text-white',\n      ];\n\n      if (variant === 'solid') {\n        tempClassNames = [...sharedClasses, ...btnSolid];\n      } else if (variant === 'outline') {\n        tempClassNames = [...sharedClasses, ...btnOutline];\n      } else if (variant === 'ghost') {\n        tempClassNames = [...sharedClasses, ...btnGhost];\n      }\n\n      // handle sizes\n      let sizeSm = ['h-8', 'px-3', 'text-sm'];\n      let sizeMd = ['h-10', 'px-6'];\n      let sizeLg = ['h-12', 'px-6', 'text-lg'];\n\n      if (size === 'sm') {\n        tempClassNames = [...tempClassNames, ...sizeSm];\n      } else if (size === 'md') {\n        tempClassNames = [...tempClassNames, ...sizeMd];\n      } else if (size === 'lg') {\n        tempClassNames = [...tempClassNames, ...sizeLg];\n      }\n\n      let classes = tempClassNames.join(' ');\n\n      let Element = as ? (\n        React.createElement(\n          as,\n          {\n            className: `${classes} ${className}`,\n            target: isExternal ? '_blank' : undefined,\n            rel: isExternal ? 'noopener noreferrer' : undefined,\n            ref,\n            ...rest,\n          },\n          children\n        )\n      ) : (\n        <button {...rest} className={`${classes} ${className}`} ref={ref}>\n          {children}\n        </button>\n      );\n\n      return (\n        <span className={`relative ${fullWidth ? 'w-full' : undefined}`}>\n          {Element}\n        </span>\n      );\n    }\n  )\n);\n\nif (__DEV__) {\n  Button.displayName = 'Button';\n}\n\n/* === IconButton Element === */\n\nexport interface IconButtonProps extends ButtonProps {\n  icon?: React.ReactElement;\n  'aria-label': string;\n}\n\nexport const IconButton = React.memo(\n  forwardRef<HTMLButtonElement, IconButtonProps>(\n    (\n      {\n        children,\n        icon,\n        className,\n        'aria-label': ariaLabel,\n        size = 'md',\n        ...rest\n      },\n      ref\n    ) => {\n      let sharedClasses = ['rounded-full', '!px-0'];\n\n      // handle sizes\n      let sizeSm = ['w-8'];\n      let sizeMd = ['w-10'];\n      let sizeLg = ['w-12'];\n\n      if (size === 'sm') {\n        sharedClasses = [...sharedClasses, ...sizeSm];\n      } else if (size === 'md') {\n        sharedClasses = [...sharedClasses, ...sizeMd];\n      } else if (size === 'lg') {\n        sharedClasses = [...sharedClasses, ...sizeLg];\n      }\n\n      /**\n       * Passing the icon as prop or children should work\n       */\n      const element = icon || children;\n      const _children = React.isValidElement(element)\n        ? React.cloneElement(element as any, {\n            'aria-hidden': true,\n            focusable: false,\n          })\n        : null;\n\n      let classes = sharedClasses.join(' ');\n      return (\n        <Button\n          className={`${classes} ${className}`}\n          aria-label={ariaLabel}\n          size={size}\n          {...rest}\n          ref={ref}\n        >\n          {_children}\n        </Button>\n      );\n    }\n  )\n);\n\nif (__DEV__) {\n  IconButton.displayName = 'IconButton';\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}